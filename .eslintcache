[{"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/index.js":"1","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reportWebVitals.js":"2","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/users.js":"3","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/questions.js":"4","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/questions.js":"5","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/middleware/index.js":"6","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/App.js":"7","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/utils/_DATA.js":"8","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/shared.js":"9","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/middleware/logger.js":"10","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/authedUser.js":"11","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/utils/api.js":"12","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/login.js":"13","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/index.js":"14","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/authedUser.js":"15","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/users.js":"16","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/NavBar.js":"17","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/HomePage.js":"18","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/userQuestionCard.js":"19","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/UserQuestionCard.js":"20","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/ViewPollQuestion.js":"21","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/ViewPollResult.js":"22","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/PageDoesNotExist.js":"23","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/NewQuestion.js":"24"},{"size":494,"mtime":1610232671289,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1608761423492,"results":"27","hashOfConfig":"28"},{"size":680,"mtime":1612145038909,"results":"29","hashOfConfig":"26"},{"size":414,"mtime":1612145038922,"results":"30","hashOfConfig":"26"},{"size":751,"mtime":1612145038919,"results":"31","hashOfConfig":"26"},{"size":159,"mtime":1609705233799,"results":"32","hashOfConfig":"26"},{"size":1603,"mtime":1612655718515,"results":"33","hashOfConfig":"26"},{"size":10786,"mtime":1610821851842,"results":"34","hashOfConfig":"26"},{"size":1094,"mtime":1612638119779,"results":"35","hashOfConfig":"26"},{"size":285,"mtime":1609706945989,"results":"36","hashOfConfig":"26"},{"size":147,"mtime":1609644960643,"results":"37","hashOfConfig":"26"},{"size":592,"mtime":1610830998733,"results":"38","hashOfConfig":"26"},{"size":3018,"mtime":1612638150259,"results":"39","hashOfConfig":"26"},{"size":221,"mtime":1609646694233,"results":"40","hashOfConfig":"26"},{"size":244,"mtime":1609646576240,"results":"41","hashOfConfig":"26"},{"size":360,"mtime":1612145038891,"results":"42","hashOfConfig":"26"},{"size":1924,"mtime":1612656480574,"results":"43","hashOfConfig":"26"},{"size":3021,"mtime":1611114194478,"results":"44","hashOfConfig":"26"},{"size":965,"mtime":1610820891637,"results":"45","hashOfConfig":"26"},{"size":2750,"mtime":1612054250382,"results":"46","hashOfConfig":"26"},{"size":6465,"mtime":1612638093171,"results":"47","hashOfConfig":"26"},{"size":424,"mtime":1610937563433,"results":"48","hashOfConfig":"26"},{"size":316,"mtime":1611113439856,"results":"49","hashOfConfig":"26"},{"size":2306,"mtime":1612717875251,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"ipnjg5",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11tm2o8",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"53"},"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/index.js",[],["109","110"],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reportWebVitals.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/users.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/questions.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/questions.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/middleware/index.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/App.js",["111","112"],"import '../App.css';\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {handleInitialData} from \"../actions/shared\";\nimport Login from \"./login\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Switch} from 'react-router-dom';\nimport HomePage from \"./HomePage\";\nimport ViewPollQuestion from \"./ViewPollQuestion\";\nimport PageDoesNotExist from \"./PageDoesNotExist\";\nimport NewQuestion from \"./NewQuestion\";\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.handleInitialData();\n    }\n\n    render() {\n        const {authedUser} = this.props;\n        // console.log(this.props.authedUser)\n        console.log('the props are ', this.props)\n        return (\n            <Router>\n                <div>\n                    {this.props.authedUser === null ? (\n                            <Route>\n                                <Login/>\n                            </Route>) :\n                        <Switch>\n                            <Route exact path=\"/\" component={HomePage} />\n                            {/*<Route path='/questions/wrong_id' component={PageDoesNotExist} />*/}\n                            <Route path=\"/questions/:question_id\" component={ViewPollQuestion} />\n                            <Route path = \"/newQuestion\" component={NewQuestion}></Route>\n                        </Switch>}\n                </div>\n            </Router>\n        );\n    }\n\n}\n\n\nfunction mapStateToProps({authedUser}) {\n    return {\n        authedUser\n    };\n}\n\nexport default connect(mapStateToProps, {handleInitialData})(App)\n\n\n\n","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/utils/_DATA.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/shared.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/middleware/logger.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/authedUser.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/utils/api.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/login.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/index.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/reducers/authedUser.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/actions/users.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/NavBar.js",["113","114","115","116","117"],"import React, {Component} from 'react';\nimport { Navbar,NavLink, NavItem, NavDropdown, MenuItem, Nav } from 'react-bootstrap';\nimport {connect} from \"react-redux\";\nimport {handleInitialData} from \"../actions/shared\";\nimport {setAuthedUser} from \"../actions/authedUser\";\nimport { Link } from 'react-router-dom';\n\nclass NavBar extends Component {\n    logout(event){\n        event.preventDefault();\n        this.props.setAuthedUser(null);\n    }\n    render() {\n        const {authedUser, users} = this.props;\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>Would You Rather</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\n                        {/*<Nav.Link href=\"#newQuestion\">New Question</Nav.Link>*/}\n                        <NavLink to='/newQuestion'>New Question</NavLink>\n                        <Nav.Link href=\"#leaderboard\">LeaderBoard</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    {authedUser && (\n                        <>\n                            <Navbar.Text>\n                                Signed in as:<a href='#login'>{users[authedUser].name}</a>\n                            </Navbar.Text>\n                            <button id='logoutButton' onClick={(event) => this.logout(event)}>\n                                Logout\n                            </button>\n                        </>\n                    )}\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps({authedUser, users}) {\n    return {\n        authedUser, users\n    };\n}\nexport default connect(mapStateToProps, {setAuthedUser})(NavBar);\n","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/HomePage.js",["118"],"import React, {Component} from 'react';\nimport NavBar from \"./NavBar\";\nimport {connect} from \"react-redux\";\nimport {handleInitialData} from \"../actions/shared\";\nimport UserQuestionCard from \"./UserQuestionCard\";\nimport { Nav} from 'react-bootstrap';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state =({\n            key: \"unanswered\"\n        })\n        this.handleSelect = this.handleSelect.bind(this)\n    }\n    handleSelect(key){\n        this.setState({\n            key: key\n        })\n    }\n    render() {\n        console.log('props on the homepage are', this.props)\n        console.log('this.state.key',this.state.key)\n        return (\n            <div>\n                <NavBar/>\n                <br/>\n                <Nav variant=\"tabs\" defaultActiveKey=\"unanswered\" onSelect={this.handleSelect}>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"unanswered\">Unanswered Questions</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"answered\">Answered Questions</Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                {this.state.key === \"unanswered\" ? this.props.unansweredQuestionsByUser.map((obj)=>(\n                    <UserQuestionCard\n                        questionID = {obj.id}\n                        questionStatus = 'unanswered'\n                        authorName = {this.props.usersAvatar[obj.author].name}\n                        questionText={obj.optionOne.text}\n                        userAvatar={this.props.usersAvatar[obj.author].avatarURL}/>\n                )):this.props.answeredQuestionsByUser.map((obj)=>(\n                    <UserQuestionCard\n                        questionID = {obj.id}\n                        questionStatus = 'answered'\n                        authorName = {this.props.usersAvatar[obj.author].name}\n                        questionText={obj.optionOne.text}\n                        userAvatar={this.props.usersAvatar[obj.author].avatarURL}/>\n                ))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({authedUser, questions, users}) {\n    const questionsId = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n    const questionsOptionOneText = Object.values(questions);\n    const usersAvatar = users;\n    const answeredQuestionIdsByUser = Object.keys(users[authedUser].answers);\n    const answeredQuestionsByUser = Object.keys(users[authedUser].answers).map(\n        (questionID) => questions[questionID]\n    ).sort((a, b) => b.timestamp - a.timestamp);\n    const unansweredQuestionsByUser = Object.values(questions).filter((question) => !answeredQuestionIdsByUser.includes(question.id)).sort((a, b) => b.timestamp - a.timestamp);\n    return {\n        questionsId,\n        questionsOptionOneText,\n        answeredQuestionsByUser,\n        usersAvatar,\n        unansweredQuestionsByUser\n    }\n}\n\nexport default connect(mapStateToProps)(HomePage)","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/userQuestionCard.js",["119"],"import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nclass UserQuestionCard extends Component {\n    render() {\n        console.log('questions are ', this.props.questions)\n        return (\n            <div>\n                <div className=\"card\" style=\"width: 18rem;\">\n                    {/*<img className=\"card-img-top\"*/}\n                    {/*     src=\"https://akpsi.org/wp-content/uploads/2016/09/Female-Avatar-300X300-01.jpg\"*/}\n                    {/*     alt=\"Card image cap\"/>*/}\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Some quick example text to build on the card title and make up the\n                            bulk of the card's content.</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({questions}) {\n    return {\n        questions\n    }\n}\n\nexport default connect(mapStateToProps)(UserQuestionCard)",["120","121"],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/UserQuestionCard.js",["122","123"],"import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button'\nimport {Redirect,Link} from 'react-router-dom';\nimport {formatQuestion} from \"../utils/api\"\nimport ViewPollQuestion from \"./ViewPollQuestion\";\nimport ViewPollResult from \"./ViewPollResult\";\n\nclass UserQuestionCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            viewPoll: false\n        })\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState(state => ({\n            viewPoll: !state.viewPoll\n        }));\n    }\n\n    render() {\n        console.log('the props on my user card page are ', this.props)\n        const questionID = this.props.questionID;\n        const questionStatus = this.props.questionStatus;\n        const questionText = this.props.questionText;\n        const userAvatar = this.props.userAvatar;\n        const authorName = this.props.authorName;\n\n        if (questionStatus === 'unanswered' && this.state.viewPoll === true) {\n            //redirect to the page which allows the user to vote for the question\n            <ViewPollQuestion\n                userAvatar={this.props.userAvatar}\n                authorName={this.props.authorName}\n                questionText={this.props.questionText} />\n            // return <Redirect push to={`/questions/${questionID}`} />;\n\n        } else if (questionStatus === 'answered' && this.state.viewPoll === true) {\n            //redirect to the page which allows the user to view who voted for the question\n            <ViewPollResult/>\n            // return <Redirect push to={`/questions/${questionID}`} />;\n        }\n\n        return (\n            <div>\n                <Card style={{marginBlockStart: '2rem', marginInlineStart: '29rem', width: '25rem'}}>\n                    <Card.Text>\n                        <b>{authorName}</b> asks\n                    </Card.Text>\n                    <Card.Img variant=\"top\" src={userAvatar}/>\n                    <Card.Body>\n                        <Card.Title>Would You Rather</Card.Title>\n                        <Card.Text>\n                            ... {questionText} ...\n                        </Card.Text>\n                        <Link to={`/questions/${questionID}`}>\n                            <Button onClick={this.handleClick}>View Poll</Button>\n                        </Link>\n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({questions, authedUser, users}, {id}) {\n    return {\n        authedUser,\n        users,\n        questions\n    }\n}\n\nexport default connect(mapStateToProps)(UserQuestionCard)","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/ViewPollQuestion.js",["124","125","126","127","128","129","130"],"import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Card from \"react-bootstrap/Card\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport authedUser from \"../reducers/authedUser\";\nimport {handleSaveQuestionAnswer} from \"../actions/shared\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass ViewPollQuestion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userAnswer: ''\n        }\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    onValueChange(event) {\n        this.setState({\n            userAnswer: event.target.value\n        });\n    }\n\n    onFormSubmit(event) {\n        event.preventDefault();\n        if (this.state.userAnswer !== '') {\n            this.props.handleSaveQuestionAnswer(this.props.authedUser, this.props.match.params.question_id, this.state.userAnswer);\n        }\n        console.log(this.state.userAnswer)\n    }\n\n    render() {\n        console.log('the props on the viewpollquestion page are ', this.props)\n        const userAvatar = this.props.userAvatar;\n        const questionText = this.props.questionText;\n        // console.log('the auth user is', this.props.authedUser);\n        const question_id = this.props.match.params.question_id;\n        const questionAuthorName = this.props.users[question_id.author];\n        // console.log('this.props.params', question_id);\n        // console.log('the logged in user is', this.props.loggedInUser);\n\n\n        // determine if the question has been answered by the logged in user\n        const hasQuesBeenAnswered = Object.keys(this.props.loggedInUser.answers).includes(question_id)\n        const questionIdObj = Object.values(this.props.questions[question_id])\n        // const usersObj = Object.values(this.props.users[])\n        console.log('questionIdObj', questionIdObj)\n        const questionUsersName = this.props.users[(questionIdObj[1])[1]]\n        // console.log('usersObj', usersObj)\n        const authorID = this.props.questions[question_id].author;\n        // console.log('authorID is', authorID);\n        const authorName = this.props.users[authorID].name;\n        const authorAvatarURL = this.props.users[authorID].avatarURL;\n\n        const votesOptionOne = questionIdObj[3].votes.length;\n        const votesOptionTwo = questionIdObj[4].votes.length;\n        const votesTotal = votesOptionOne + votesOptionTwo;\n        const votesOptionOnePercentage = (votesOptionOne / votesTotal) * 100;\n        const votesOptionTwoPercentage = (votesOptionTwo / votesTotal) * 100;\n\n        return (\n            <div>\n                <form onSubmit={this.onFormSubmit}>\n                    {!hasQuesBeenAnswered ?\n                        <Card style={{marginBlockStart: '2rem', marginInlineStart: '29rem', width: '25rem'}}>\n                            <Card.Text>\n                                <b>{authorName}</b> asks\n                            </Card.Text>\n                            <Card.Img variant=\"top\" src={authorAvatarURL}/>\n                            <Card.Body>\n                                <Card.Title>Would You Rather</Card.Title>\n                                <div className=\"radio\">\n                                    <input\n                                        type=\"radio\"\n                                        value=\"optionOne\"\n                                        checked={this.state.userAnswer === 'optionOne'}\n                                        onChange={this.onValueChange}\n                                    />\n                                    <label><Card.Text>\n                                        {questionIdObj[3].text}\n                                    </Card.Text></label>\n                                </div>\n                                <div className=\"radio\">\n                                    <input\n                                        type=\"radio\"\n                                        value=\"optionTwo\"\n                                        checked={this.state.userAnswer === 'optionTwo'}\n                                        onChange={this.onValueChange}\n                                    />\n                                    <label><Card.Text>\n                                        {questionIdObj[4].text}\n                                    </Card.Text></label>\n                                </div>\n                                <button\n                                    type='submit'\n                                >\n                                    Submit\n                                </button>\n                            </Card.Body>\n                        </Card> :\n                    <Card style={{marginBlockStart: '2rem', marginInlineStart: '29rem', width: '25rem'}}>\n                        <Card.Text>\n                            <b>Asked By {authorName}</b>\n                        </Card.Text>\n                        <Card.Img src={authorAvatarURL}/>\n                        <br/>\n                        <Card.Title style={{textAlign:'center'}}><h1>Results</h1></Card.Title>\n                        <Card>\n                            <Card.Text>\n                            Would You Rather <b>{questionIdObj[3].text}</b>\n                            </Card.Text>\n                            <ProgressBar now={votesOptionOnePercentage} label={`${votesOptionOnePercentage}%`}></ProgressBar>\n                            <span>{votesOptionOne} out of {votesTotal}</span>\n                        </Card>\n                        <br/>\n                        <Card>\n                            <Card.Text>\n                            Would You Rather <b>{questionIdObj[4].text}</b>\n                            </Card.Text>\n                            <ProgressBar now={votesOptionTwoPercentage} label={`${votesOptionTwoPercentage}%`}></ProgressBar>\n                            <span>{votesOptionTwo} out of {votesTotal}</span>\n                        </Card>\n                    </Card>}\n\n                </form>\n\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({questions, authedUser, users}, props) {\n    const loggedInUser = authedUser ? users[authedUser] : null;\n    return {\n        loggedInUser,\n        authedUser,\n        users,\n        questions\n    }\n}\n\nexport default connect(mapStateToProps, {handleSaveQuestionAnswer})(ViewPollQuestion)","/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/ViewPollResult.js",[],["131","132"],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/PageDoesNotExist.js",[],"/Users/tanvibhardwaj/WebstormProjects/would-you-rather-game/src/components/NewQuestion.js",["133"],"import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form'\n\nclass NewQuestion extends Component {\n    render() {\n        return (\n            <div>\n                <Card>\n                    <Card.Title  style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}>\n                        Create New Question\n                    </Card.Title>\n                    <br/>\n                    <Card.Text  style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}>\n                        Complete the question:\n                    </Card.Text>\n                    <Card.Header  style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}>\n                        <b><em> Would you rather .. </em></b>\n                    </Card.Header>\n                    <br/>\n                    <Form>\n                        <Form.Label  style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                        }}>Option One Text</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter option one text\" />\n                        <br/>\n                        <span style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                        }}><b>----OR----</b></span>\n                        <br/>\n                        <Form.Label  style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                        }}>Option Two Text</Form.Label>\n                        <Form.Control   type=\"text\" placeholder=\"Enter option two text\" />\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n\n}\n\nexport default NewQuestion",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":24},{"ruleId":"138","severity":1,"message":"142","line":20,"column":16,"nodeType":"140","messageId":"141","endLine":20,"endColumn":26},{"ruleId":"138","severity":1,"message":"143","line":2,"column":26,"nodeType":"140","messageId":"141","endLine":2,"endColumn":33},{"ruleId":"138","severity":1,"message":"144","line":2,"column":35,"nodeType":"140","messageId":"141","endLine":2,"endColumn":46},{"ruleId":"138","severity":1,"message":"145","line":2,"column":48,"nodeType":"140","messageId":"141","endLine":2,"endColumn":56},{"ruleId":"138","severity":1,"message":"146","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":26},{"ruleId":"138","severity":1,"message":"147","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":14},{"ruleId":"138","severity":1,"message":"146","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":9,"column":39,"nodeType":"150","endLine":9,"endColumn":60},{"ruleId":"134","replacedBy":"151"},{"ruleId":"136","replacedBy":"152"},{"ruleId":"138","severity":1,"message":"153","line":5,"column":9,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"154","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":23},{"ruleId":"138","severity":1,"message":"147","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"155","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"138","severity":1,"message":"156","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":18},{"ruleId":"138","severity":1,"message":"157","line":36,"column":15,"nodeType":"140","messageId":"141","endLine":36,"endColumn":25},{"ruleId":"138","severity":1,"message":"158","line":37,"column":15,"nodeType":"140","messageId":"141","endLine":37,"endColumn":27},{"ruleId":"138","severity":1,"message":"159","line":40,"column":15,"nodeType":"140","messageId":"141","endLine":40,"endColumn":33},{"ruleId":"138","severity":1,"message":"160","line":50,"column":15,"nodeType":"140","messageId":"141","endLine":50,"endColumn":32},{"ruleId":"134","replacedBy":"161"},{"ruleId":"136","replacedBy":"162"},{"ruleId":"138","severity":1,"message":"163","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'PageDoesNotExist' is defined but never used.","Identifier","unusedVar","'authedUser' is assigned a value but never used.","'NavItem' is defined but never used.","'NavDropdown' is defined but never used.","'MenuItem' is defined but never used.","'handleInitialData' is defined but never used.","'Link' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute",["164"],["165"],"'Redirect' is defined but never used.","'formatQuestion' is defined but never used.","'Button' is defined but never used.","'authedUser' is defined but never used.","'userAvatar' is assigned a value but never used.","'questionText' is assigned a value but never used.","'questionAuthorName' is assigned a value but never used.","'questionUsersName' is assigned a value but never used.",["164"],["165"],"'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]